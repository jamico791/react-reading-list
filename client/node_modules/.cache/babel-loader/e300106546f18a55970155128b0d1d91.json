{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/AuthorPopup.js\";\nimport React from 'react';\nimport { useMutation, useQuery, gql } from '@apollo/client';\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\nconst DELETE_AUTHOR = gql`\n\tmutation DeleteAuthor($id: ID) {\n\t\tdeleteAuthor(id: $id) {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst AuthorPopup = ({\n  show,\n  setShow\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS);\n  const [deleteAuthor] = useMutation(DELETE_AUTHOR);\n\n  const handleChange = event => {\n    console.log(event.target.value);\n  };\n\n  const handleCancel = () => {\n    setShow(false);\n  };\n\n  const handleDelete = () => {};\n\n  if (loading) return null;\n  if (error) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: show ? 'shown' : 'hidden',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChange,\n    className: \"three columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, data.authors.map(author => /*#__PURE__*/React.createElement(\"option\", {\n    value: author.name,\n    key: author.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, author.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"delete-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"cancel-button\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, \"Cancel\"));\n};\n\nexport default AuthorPopup;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/AuthorPopup.js"],"names":["React","useMutation","useQuery","gql","GET_AUTHORS","DELETE_AUTHOR","AuthorPopup","show","setShow","loading","error","data","deleteAuthor","handleChange","event","console","log","target","value","handleCancel","handleDelete","authors","map","author","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,GAAhC,QAA2C,gBAA3C;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;CAAxB;AAQA,MAAME,aAAa,GAAGF,GAAI;;;;;;;CAA1B;;AASA,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAC1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACE,WAAD,CAAzC;AACA,QAAM,CAACQ,YAAD,IAAiBX,WAAW,CAACI,aAAD,CAAlC;;AAEA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AAC1BX,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAIA,QAAMY,YAAY,GAAG,MAAM,CAAE,CAA7B;;AAEA,MAAIX,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,sBACC;AAAK,IAAA,SAAS,EAAEH,IAAI,GAAG,OAAH,GAAa,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,QAAQ,EAAEM,YAAlB;AAAgC,IAAA,SAAS,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAiBC,MAAM,iBACvB;AAAQ,IAAA,KAAK,EAAEA,MAAM,CAACC,IAAtB;AAA4B,IAAA,GAAG,EAAED,MAAM,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,MAAM,CAACC,IADT,CADA,CADF,CADD,eAQC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARD,eAWC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,eAFX;AAGC,IAAA,OAAO,EAAEL,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD,CADD;AAqBA,CArCD;;AAuCA,eAAeb,WAAf","sourcesContent":["import React from 'react'\nimport { useMutation, useQuery, gql } from '@apollo/client'\n\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\nconst DELETE_AUTHOR = gql`\n\tmutation DeleteAuthor($id: ID) {\n\t\tdeleteAuthor(id: $id) {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst AuthorPopup = ({ show, setShow }) => {\n\tconst { loading, error, data } = useQuery(GET_AUTHORS)\n\tconst [deleteAuthor] = useMutation(DELETE_AUTHOR)\n\n\tconst handleChange = event => {\n\t\tconsole.log(event.target.value)\n\t}\n\n\tconst handleCancel = () => {\n\t\tsetShow(false)\n\t}\n\n\tconst handleDelete = () => {}\n\n\tif (loading) return null\n\tif (error) return null\n\treturn (\n\t\t<div className={show ? 'shown' : 'hidden'}>\n\t\t\t<select onChange={handleChange} className=\"three columns\">\n\t\t\t\t{data.authors.map(author => (\n\t\t\t\t\t<option value={author.name} key={author.id}>\n\t\t\t\t\t\t{author.name}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t<button type=\"button\" className=\"delete-button\">\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"cancel-button\"\n\t\t\t\tonClick={handleCancel}\n\t\t\t>\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default AuthorPopup\n"]},"metadata":{},"sourceType":"module"}