{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/BookList.js\";\nimport React from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nconst GET_BOOKS = gql`\n\tquery GetBooks {\n\t\tbooks {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\nconst DELETE_BOOK = gql`\n\tmutation DeleteBook($id: ID) {\n\t\tdeleteBook(id: $id) {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst BookList = ({\n  handleClick\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BOOKS, {\n    pollInterval: 500\n  });\n  const [deleteBook] = useMutation(DELETE_BOOK);\n\n  const handleDelete = event => {\n    deleteBook(data.books.find(book => book.id === event.target.id).id);\n    console.log(data.books.find(book => book.id === event.target.id));\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  }, \"Uh oh. Something went wrong :(\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, data.books.map(book => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-item\",\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: book.id,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, book.name), /*#__PURE__*/React.createElement(\"button\", {\n    id: book.id,\n    onClick: handleDelete,\n    className: \"delete-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, \"X\"))));\n};\n\nexport default BookList;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/BookList.js"],"names":["React","useQuery","gql","useMutation","GET_BOOKS","DELETE_BOOK","BookList","handleClick","loading","error","data","pollInterval","deleteBook","handleDelete","event","books","find","book","id","target","console","log","map","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,WAAxB,QAA2C,gBAA3C;AAEA,MAAMC,SAAS,GAAGF,GAAI;;;;;;;CAAtB;AASA,MAAMG,WAAW,GAAGH,GAAI;;;;;;;CAAxB;;AASA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACrC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACG,SAAD,EAAY;AACpDO,IAAAA,YAAY,EAAE;AADsC,GAAZ,CAAzC;AAIA,QAAM,CAACC,UAAD,IAAeT,WAAW,CAACE,WAAD,CAAhC;;AAEA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC7BF,IAAAA,UAAU,CAACF,IAAI,CAACK,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,KAAK,CAACK,MAAN,CAAaD,EAAjD,EAAqDA,EAAtD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACK,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,KAAK,CAACK,MAAN,CAAaD,EAAjD,CAAZ;AACA,GAHD;;AAKA,MAAIV,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AAEX,sBACC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,IAAI,CAACK,KAAL,CAAWO,GAAX,CAAeL,IAAI,iBACnB;AAAI,IAAA,SAAS,EAAC,WAAd;AAA0B,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,EAAE,EAAED,IAAI,CAACC,EAAjB;AAAqB,IAAA,OAAO,EAAEX,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEU,IAAI,CAACM,IADP,CADD,eAIC;AACC,IAAA,EAAE,EAAEN,IAAI,CAACC,EADV;AAEC,IAAA,OAAO,EAAEL,YAFV;AAGC,IAAA,SAAS,EAAC,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJD,CADA,CADF,CADD;AAkBA,CAjCD;;AAmCA,eAAeP,QAAf","sourcesContent":["import React from 'react'\nimport { useQuery, gql, useMutation } from '@apollo/client'\n\nconst GET_BOOKS = gql`\n\tquery GetBooks {\n\t\tbooks {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst DELETE_BOOK = gql`\n\tmutation DeleteBook($id: ID) {\n\t\tdeleteBook(id: $id) {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst BookList = ({ handleClick }) => {\n\tconst { loading, error, data } = useQuery(GET_BOOKS, {\n\t\tpollInterval: 500,\n\t})\n\n\tconst [deleteBook] = useMutation(DELETE_BOOK)\n\n\tconst handleDelete = event => {\n\t\tdeleteBook(data.books.find(book => book.id === event.target.id).id)\n\t\tconsole.log(data.books.find(book => book.id === event.target.id))\n\t}\n\n\tif (loading) return <p>Loading...</p>\n\tif (error) return <p>Uh oh. Something went wrong :(</p>\n\n\treturn (\n\t\t<ul className=\"book-list\">\n\t\t\t{data.books.map(book => (\n\t\t\t\t<li className=\"list-item\" key={book.id}>\n\t\t\t\t\t<button id={book.id} onClick={handleClick}>\n\t\t\t\t\t\t{book.name}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid={book.id}\n\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\tclassName=\"delete-button\"\n\t\t\t\t\t>\n\t\t\t\t\t\tX\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nexport default BookList\n"]},"metadata":{},"sourceType":"module"}