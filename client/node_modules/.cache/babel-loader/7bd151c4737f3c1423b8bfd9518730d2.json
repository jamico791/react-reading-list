{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/BookForm.js\";\nimport React, { useState, useReducer } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\nconst ADD_BOOK = gql`\n\tmutation AddBook($name: String, $genre: String, $authorId: ID) {\n\t\taddBook(name: $name, genre: $genre, authorId: $authorId) {\n\t\t\tname\n\t\t\tgenre\n\t\t}\n\t}\n`;\nconst initialState = {\n  title: '',\n  genre: '',\n  author: 'choose'\n};\n\nfunction reducer(state, {\n  field,\n  value\n}) {\n  return { ...state,\n    [field]: value\n  };\n}\n\nconst BookForm = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS, {\n    pollInterval: 500\n  });\n  const [addBook] = useMutation(ADD_BOOK);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleChange = event => {\n    const {\n      name: field,\n      value\n    } = event.target;\n    dispatch({\n      field,\n      value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      title,\n      genre,\n      author\n    } = state;\n    const id = data.authors.find(person => person.name === author).id; // addBook({ variables: { name: title, genre, authorId: id } })\n\n    for (const [field, value] of Object.entries(state)) dispatch({\n      field,\n      value: ''\n    });\n  };\n\n  const {\n    title,\n    genre,\n    author\n  } = state;\n  if (loading) return null;\n  if (error) return null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"six columns\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, \"Add a Book\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Book Title\",\n    value: title,\n    name: \"title\",\n    id: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Genre\",\n    value: genre,\n    name: \"genre\",\n    id: \"genre\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Author\",\n    value: author,\n    name: \"author\",\n    id: \"author\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"choose\",\n    key: \"choose\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Choose an Author\"), data.authors.map(author => /*#__PURE__*/React.createElement(\"option\", {\n    key: author.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }\n  }, author.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"twelve columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary u-full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }, \"Submit Book\"))));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/BookForm.js"],"names":["React","useState","useReducer","useQuery","useMutation","gql","GET_AUTHORS","ADD_BOOK","initialState","title","genre","author","reducer","state","field","value","BookForm","loading","error","data","pollInterval","addBook","dispatch","handleChange","event","name","target","handleSubmit","preventDefault","id","authors","find","person","Object","entries","map"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react'\nimport { useQuery, useMutation, gql } from '@apollo/client'\n\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst ADD_BOOK = gql`\n\tmutation AddBook($name: String, $genre: String, $authorId: ID) {\n\t\taddBook(name: $name, genre: $genre, authorId: $authorId) {\n\t\t\tname\n\t\t\tgenre\n\t\t}\n\t}\n`\n\nconst initialState = {\n\ttitle: '',\n\tgenre: '',\n\tauthor: 'choose',\n}\n\nfunction reducer(state, { field, value }) {\n\treturn {\n\t\t...state,\n\t\t[field]: value,\n\t}\n}\n\nconst BookForm = () => {\n\tconst { loading, error, data } = useQuery(GET_AUTHORS, {\n\t\tpollInterval: 500,\n\t})\n\n\tconst [addBook] = useMutation(ADD_BOOK)\n\n\tconst [state, dispatch] = useReducer(reducer, initialState)\n\n\tconst handleChange = event => {\n\t\tconst { name: field, value } = event.target\n\t\tdispatch({ field, value })\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tconst { title, genre, author } = state\n\t\tconst id = data.authors.find(person => person.name === author).id\n\t\t// addBook({ variables: { name: title, genre, authorId: id } })\n\t\tfor (const [field, value] of Object.entries(state))\n\t\t\tdispatch({ field, value: '' })\n\t}\n\n\tconst { title, genre, author } = state\n\n\tif (loading) return null\n\tif (error) return null\n\n\treturn (\n\t\t<form className=\"six columns\" onSubmit={handleSubmit}>\n\t\t\t<h3>Add a Book</h3>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Book Title\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"genre\">Genre</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Genre\"\n\t\t\t\t\t\tvalue={genre}\n\t\t\t\t\t\tname=\"genre\"\n\t\t\t\t\t\tid=\"genre\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Author\"\n\t\t\t\t\t\tvalue={author}\n\t\t\t\t\t\tname=\"author\"\n\t\t\t\t\t\tid=\"author\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"choose\" key=\"choose\" disabled>\n\t\t\t\t\t\t\tChoose an Author\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{data.authors.map(author => (\n\t\t\t\t\t\t\t<option key={author.id}>{author.name}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"twelve columns\">\n\t\t\t\t\t<button className=\"button-primary u-full-width\">\n\t\t\t\t\t\tSubmit Book\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default BookForm\n"]},"metadata":{},"sourceType":"module"}