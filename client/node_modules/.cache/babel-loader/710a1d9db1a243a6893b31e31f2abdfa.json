{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/AuthorForm.js\";\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nconst ADD_Author = gql`\n\tmutation AddAuthor($name: String!) {\n\t\taddAuthor(name: $name) {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst AuthorForm = () => {\n  const [name, setName] = useState();\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"six columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, \"Add an Author\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"twelve columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    placeholder: \"Name\",\n    type: \"text\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"row u-full-width button-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \"Submit Author\"));\n};\n\nexport default AuthorForm;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/AuthorForm.js"],"names":["React","useState","useMutation","gql","ADD_Author","AuthorForm","name","setName","handleChange","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AAEA,MAAMC,UAAU,GAAGD,GAAI;;;;;;;CAAvB;;AASA,MAAME,UAAU,GAAG,MAAM;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;;AAEA,QAAMO,YAAY,GAAGC,KAAK,IAAI;AAC7BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACA,GAFD;;AAIA,sBACC;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,WAAW,EAAC,MAFb;AAGC,IAAA,IAAI,EAAC,MAHN;AAIC,IAAA,QAAQ,MAJT;AAKC,IAAA,QAAQ,EAAEH,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAFD,eAYC;AAAQ,IAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZD,CADD;AAkBA,CAzBD;;AA2BA,eAAeH,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useMutation, gql } from '@apollo/client'\n\nconst ADD_Author = gql`\n\tmutation AddAuthor($name: String!) {\n\t\taddAuthor(name: $name) {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst AuthorForm = () => {\n\tconst [name, setName] = useState()\n\n\tconst handleChange = event => {\n\t\tsetName(event.target.value)\n\t}\n\n\treturn (\n\t\t<form className=\"six columns\">\n\t\t\t<h3>Add an Author</h3>\n\t\t\t<div className=\"twelve columns\">\n\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\trequired\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className=\"row u-full-width button-primary\">\n\t\t\t\tSubmit Author\n\t\t\t</button>\n\t\t</form>\n\t)\n}\n\nexport default AuthorForm\n"]},"metadata":{},"sourceType":"module"}