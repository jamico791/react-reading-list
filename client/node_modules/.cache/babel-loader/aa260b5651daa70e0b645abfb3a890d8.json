{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/BookForm.js\";\nimport React, { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\nconst ADD_BOOK = gql`\n\tmutation AddBook($name: String, $genre: String, $authorId: ID) {\n\t\taddBook(name: $name, genre: $genre, authorId: $authorId) {\n\t\t\tname\n\t\t\tgenre\n\t\t}\n\t}\n`;\n\nconst BookForm = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS, {\n    pollInterval: 500\n  });\n  const [state, setState] = useState({\n    title: '',\n    genre: '',\n    author: ''\n  });\n  const [addBook] = useMutation(ADD_BOOK);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    const {\n      title,\n      genre,\n      author\n    } = state;\n    const id = data.authors.find(person => person.name === author).id;\n    addBook({\n      variables: {\n        name: title,\n        genre,\n        authorId: id\n      }\n    });\n  };\n\n  if (loading) return null;\n  if (error) return null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"six columns\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, \"Add a Book\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Book Title\",\n    name: \"title\",\n    id: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Genre\",\n    name: \"genre\",\n    id: \"genre\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Author\",\n    name: \"author\",\n    id: \"author\",\n    required: true,\n    defaultValue: \"choose\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"choose\",\n    key: \"choose\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Choose an Author\"), data.authors.map(author => /*#__PURE__*/React.createElement(\"option\", {\n    key: author.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 8\n    }\n  }, author.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"twelve columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary u-full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, \"Submit Book\"))));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/BookForm.js"],"names":["React","useState","useQuery","useMutation","gql","GET_AUTHORS","ADD_BOOK","BookForm","loading","error","data","pollInterval","state","setState","title","genre","author","addBook","handleChange","event","name","value","target","handleSubmit","id","authors","find","person","variables","authorId","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useQuery, useMutation, gql } from '@apollo/client'\n\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst ADD_BOOK = gql`\n\tmutation AddBook($name: String, $genre: String, $authorId: ID) {\n\t\taddBook(name: $name, genre: $genre, authorId: $authorId) {\n\t\t\tname\n\t\t\tgenre\n\t\t}\n\t}\n`\n\nconst BookForm = () => {\n\tconst { loading, error, data } = useQuery(GET_AUTHORS, {\n\t\tpollInterval: 500,\n\t})\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tgenre: '',\n\t\tauthor: '',\n\t})\n\tconst [addBook] = useMutation(ADD_BOOK)\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[name]: value,\n\t\t})\n\t}\n\n\tconst handleSubmit = event => {\n\t\tconst { title, genre, author } = state\n\t\tconst id = data.authors.find(person => person.name === author).id\n\t\taddBook({ variables: { name: title, genre, authorId: id } })\n\t}\n\n\tif (loading) return null\n\tif (error) return null\n\n\treturn (\n\t\t<form className=\"six columns\" onSubmit={handleSubmit}>\n\t\t\t<h3>Add a Book</h3>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Book Title\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"genre\">Genre</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Genre\"\n\t\t\t\t\t\tname=\"genre\"\n\t\t\t\t\t\tid=\"genre\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Author\"\n\t\t\t\t\t\tname=\"author\"\n\t\t\t\t\t\tid=\"author\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tdefaultValue=\"choose\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"choose\" key=\"choose\" disabled>\n\t\t\t\t\t\t\tChoose an Author\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{data.authors.map(author => (\n\t\t\t\t\t\t\t<option key={author.id}>{author.name}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"twelve columns\">\n\t\t\t\t\t<button className=\"button-primary u-full-width\">\n\t\t\t\t\t\tSubmit Book\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default BookForm\n"]},"metadata":{},"sourceType":"module"}