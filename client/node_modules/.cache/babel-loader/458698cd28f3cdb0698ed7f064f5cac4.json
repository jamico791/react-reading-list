{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/BookForm.js\";\nimport React, { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\nconst ADD_BOOK = gql`\n\tmutation AddBook($name: String, $genre: String, $authorId: ID) {\n\t\taddBook(name: $name, genre: $genre, authorId: $authorId) {\n\t\t\tname\n\t\t\tgenre\n\t\t}\n\t}\n`;\n\nconst BookForm = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_AUTHORS);\n  const [state, setState] = useState({\n    title: '',\n    genre: '',\n    author: ''\n  });\n\n  const handleChange = event => {};\n\n  if (loading) return null;\n  if (error) return null;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"six columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"Add a Book\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Book Title\",\n    id: \"title\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Genre\",\n    id: \"genre\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"four columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"u-full-width\",\n    type: \"text\",\n    placeholder: \"Author\",\n    id: \"author\",\n    required: true,\n    defaultValue: \"choose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"choose\",\n    key: \"choose\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Choose an Author\"), data.authors.map(author => /*#__PURE__*/React.createElement(\"option\", {\n    key: author.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }\n  }, author.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"twelve columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary u-full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, \"Submit Book\"))));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/BookForm.js"],"names":["React","useState","useQuery","useMutation","gql","GET_AUTHORS","ADD_BOOK","BookForm","loading","error","data","state","setState","title","genre","author","handleChange","event","authors","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,GAAhC,QAA2C,gBAA3C;AAEA,MAAMC,WAAW,GAAGD,GAAI;;;;;;;CAAxB;AASA,MAAME,QAAQ,GAAGF,GAAI;;;;;;;CAArB;;AASA,MAAMG,QAAQ,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACG,WAAD,CAAzC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAClCY,IAAAA,KAAK,EAAE,EAD2B;AAElCC,IAAAA,KAAK,EAAE,EAF2B;AAGlCC,IAAAA,MAAM,EAAE;AAH0B,GAAD,CAAlC;;AAMA,QAAMC,YAAY,GAAGC,KAAK,IAAI,CAAE,CAAhC;;AAEA,MAAIT,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AAEX,sBACC;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,YAHb;AAIC,IAAA,EAAE,EAAC,OAJJ;AAKC,IAAA,QAAQ,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAWC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,OAHb;AAIC,IAAA,EAAE,EAAC,OAJJ;AAKC,IAAA,QAAQ,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAXD,eAqBC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,QAHb;AAIC,IAAA,EAAE,EAAC,QAJJ;AAKC,IAAA,QAAQ,MALT;AAMC,IAAA,YAAY,EAAC,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQC;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,GAAG,EAAC,QAA3B;AAAoC,IAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARD,EAWEC,IAAI,CAACQ,OAAL,CAAaC,GAAb,CAAiBJ,MAAM,iBACvB;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACK,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,MAAM,CAACM,IAAhC,CADA,CAXF,CAFD,CArBD,CAFD,eA0CC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,CADD,CA1CD,CADD;AAoDA,CAjED;;AAmEA,eAAed,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useQuery, useMutation, gql } from '@apollo/client'\n\nconst GET_AUTHORS = gql`\n\tquery GetAuthors {\n\t\tauthors {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst ADD_BOOK = gql`\n\tmutation AddBook($name: String, $genre: String, $authorId: ID) {\n\t\taddBook(name: $name, genre: $genre, authorId: $authorId) {\n\t\t\tname\n\t\t\tgenre\n\t\t}\n\t}\n`\n\nconst BookForm = () => {\n\tconst { loading, error, data } = useQuery(GET_AUTHORS)\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tgenre: '',\n\t\tauthor: '',\n\t})\n\n\tconst handleChange = event => {}\n\n\tif (loading) return null\n\tif (error) return null\n\n\treturn (\n\t\t<form className=\"six columns\">\n\t\t\t<h3>Add a Book</h3>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Book Title\"\n\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"genre\">Genre</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Genre\"\n\t\t\t\t\t\tid=\"genre\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"four columns\">\n\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Author\"\n\t\t\t\t\t\tid=\"author\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tdefaultValue=\"choose\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"choose\" key=\"choose\" disabled>\n\t\t\t\t\t\t\tChoose an Author\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{data.authors.map(author => (\n\t\t\t\t\t\t\t<option key={author.id}>{author.name}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"twelve columns\">\n\t\t\t\t\t<button className=\"button-primary u-full-width\">\n\t\t\t\t\t\tSubmit Book\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default BookForm\n"]},"metadata":{},"sourceType":"module"}