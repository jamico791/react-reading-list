{"ast":null,"code":"var _jsxFileName = \"/home/john/Code/Testing/graphql-books/client/src/components/BookList.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nconst BOOKS = gql`\n\tquery GetBooks {\n\t\tbooks {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst BookList = props => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BOOKS);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }\n  }, \"Uh oh. Something went wrong :(\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, data.books.map(book => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-item\",\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }, book.name))));\n};\n\nexport default BookList;","map":{"version":3,"sources":["/home/john/Code/Testing/graphql-books/client/src/components/BookList.js"],"names":["React","useQuery","gql","BOOKS","BookList","props","loading","error","data","books","map","book","id","handleClick","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,MAAMC,KAAK,GAAGD,GAAI;;;;;;;CAAlB;;AASA,MAAME,QAAQ,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,KAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AAEX,sBACC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,IAAI,iBACnB;AAAI,IAAA,SAAS,EAAC,WAAd;AAA0B,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,OAAO,EAAEP,KAAK,CAACQ,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCF,IAAI,CAACG,IAA1C,CADD,CADA,CADF,CADD;AASA,CAfD;;AAiBA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\n\nconst BOOKS = gql`\n\tquery GetBooks {\n\t\tbooks {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nconst BookList = props => {\n\tconst { loading, error, data } = useQuery(BOOKS)\n\n\tif (loading) return <p>Loading...</p>\n\tif (error) return <p>Uh oh. Something went wrong :(</p>\n\n\treturn (\n\t\t<ul className=\"book-list\">\n\t\t\t{data.books.map(book => (\n\t\t\t\t<li className=\"list-item\" key={book.id}>\n\t\t\t\t\t<button onClick={props.handleClick}>{book.name}</button>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nexport default BookList\n"]},"metadata":{},"sourceType":"module"}